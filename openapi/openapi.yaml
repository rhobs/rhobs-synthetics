openapi: 3.0.3
info:
  title: RHOBS Synthetics Probes API
  version: 0.0.1
  description: API for managing Blackbox Probes for ROSA HCP Clusters.
tags:
  - name: probes
    description: Operations related to metrics probes
paths:
  /metrics/probes:
    get:
      summary: Get a list of all configured probes
      operationId: listProbes
      tags:
        - probes
      parameters:
        - $ref: '#/components/parameters/ManagementClusterIdQueryParam'
        - $ref: '#/components/parameters/ClusterIsPrivateQueryParam'
          default: false
      responses:
        '200':
          description: A list of all configured probes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbesArrayResponse' # TODO: Add pagination and remote this
        '400':
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Creates a new probe
      operationId: createProbe
      tags:
        - probes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProbeRequest'
      responses:
        '201':
          description: Probe created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbesArrayResponse'

  /metrics/probes/{cluster_id}:
    get:
      summary: Get a probe by Cluster ID
      operationId: getProbeById
      tags:
        - probes
      parameters:
        - $ref: '#/components/parameters/ClusterIdPathParam'
      responses:
        "200":
          description: Configured probe matching the provided ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProbesArrayResponse"
        "404":
          description: Probe not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseNotFound"
    delete:
      summary: Deletes a probe matching provided ID
      operationId: deleteProbe
      tags:
        - probes
      parameters:
        - $ref: '#/components/parameters/ClusterIdPathParam'
      responses:
        '204':
          description: Probe deleted successfully. No content.
        '404':
          description: Probe not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseNotFound'

components:
  parameters:
    ManagementClusterIdQueryParam:
        name: management_cluster_id
        in: query
        description: Filter by management cluster ID.
        schema:
          $ref: '#/components/schemas/ManagementClusterIdSchema'
        example: 13210d49-4112-42de-8e5c-03f448292cc4

    ClusterIdPathParam:
        name: cluster_id
        in: path
        required: true
        description: The ID of the HCP cluster to retrieve the probe for.
        schema:
          $ref: '#/components/schemas/ClusterIdSchema'
        example: d290f1ee-6c54-4b01-90e6-d701748f0851

    ClusterIsPrivateQueryParam:
        name: private
        in: query
        description: Filter by private/public clusters. Defaults to false.
        schema:
          $ref: '#/components/schemas/ClusterIsPrivateSchema'

  schemas:
    ManagementClusterIdSchema:
      type: string
      format: uuid
      description: The unique identifier of an HCP Management Cluster (UUID format).
      example: 8e0a074c-f1e3-4957-be75-425e611142e4

    ClusterIdSchema:
      type: string
      format: uuid
      description: The unique identifier of an HCP cluster (UUID format).
      example: d290f1ee-6c54-4b01-90e6-d701748f0851

    ApiServerUrlSchema:
      type: string
      format: url
      description: The API server URL for the cluster.
      example: https://api.example-cluster.foo.devshift.org

    ClusterIsPrivateSchema:
      type: boolean
      description: Indicates if the cluster associated with the probe is private.
      example: false

    ProbeObject:
      type: object
      description: Represents a single probe configuration.
      properties:
        id:
          $ref: '#/components/schemas/ClusterIdSchema'
        apiserver_url:
          $ref: '#/components/schemas/ApiServerUrlSchema'
        management_cluster_id:
          $ref: '#/components/schemas/ManagementClusterIdSchema'
        private:
          $ref: '#/components/schemas/ClusterIsPrivateSchema'
      required:
        - id
        - apiserver_url
        - management_cluster_id
        - private

    ProbesArrayResponse:
      type: object
      properties:
        probes:
          type: array
          items:
            $ref: '#/components/schemas/ProbeObject'
          description: Array containing one or more probe objects.
      required:
        - probes

    CreateProbeRequest:
      type: object
      properties:
        cluster_id:
          $ref: '#/components/schemas/ClusterIdSchema'
        apiserver_url:
          $ref: '#/components/schemas/ApiServerUrlSchema'
        management_cluster_id:
          $ref: '#/components/schemas/ManagementClusterIdSchema'
        private:
          $ref: '#/components/schemas/ClusterIsPrivateSchema'
      required:
        - cluster_id
        - apiserver_url
        - management_cluster_id
        - private

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              format: int32
              description: HTTP status code.
              example: 400
            message:
              type: string
              description: A human-readable error message.
              example: 'Missing required parameter: `management_cluster_id` or `cluster_id`'
          required:
            - code
            - message
      required:
        - error

    ErrorResponseNotFound:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            error:
              properties:
                code:
                  example: 404
                message:
                  example: "Probe doesnâ€™t exist"
